{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-cookie-service\";\nexport let ServiceBaseService = /*#__PURE__*/(() => {\n  class ServiceBaseService {\n    constructor(_http, cookie) {\n      this._http = _http;\n      this.cookie = cookie;\n      this.urlToJson = '../assets/config.json';\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${this.getCookie(\"oAuthToken\")}`\n        })\n      };\n    }\n\n    GetApiBase() {\n      this._http.get(this.urlToJson).subscribe(response => {\n        this.apiURL = \"https://easymarketserviceapideploy.azurewebsites.net/v1/\"; //response[\"apiBase\"];\n      });\n    }\n\n    getCookie2(name) {\n      var nameEQ = name + \"=\";\n      var ca = document.cookie.split(';');\n\n      for (var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n\n        while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n\n        if (c.indexOf(nameEQ) == 0) {\n          var teste = JSON.parse(c.substring(nameEQ.length, c.length))[\"token\"];\n          console.log(teste);\n          return JSON.parse(c.substring(nameEQ.length, c.length))[\"token\"];\n        }\n      }\n\n      return null;\n    }\n\n    getCookie(name) {\n      if (this.cookie.get(name) === null || this.cookie.get(name) == '') return null;\n      const token = JSON.parse(this.cookie.get(name));\n      return token['token'];\n    }\n\n  }\n\n  ServiceBaseService.ɵfac = function ServiceBaseService_Factory(t) {\n    return new (t || ServiceBaseService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookieService));\n  };\n\n  ServiceBaseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ServiceBaseService,\n    factory: ServiceBaseService.ɵfac,\n    providedIn: 'root'\n  });\n  return ServiceBaseService;\n})();","map":null,"metadata":{},"sourceType":"module"}